import{_ as a,o as t,c as s,V as e}from"./chunks/framework.ee7253e8.js";const C=JSON.parse('{"title":"Functional Experience","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"en/examples/api/test.md","filePath":"en/examples/api/test.md"}'),n={name:"en/examples/api/test.md"},l=e(`<h1 id="functional-experience" tabindex="-1">Functional Experience <a class="header-anchor" href="#functional-experience" aria-label="Permalink to &quot;Functional Experience&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You can learn how to implement some advanced functions based on the source code</p></div><h2 id="directory-structure" tabindex="-1">directory structure <a class="header-anchor" href="#directory-structure" aria-label="Permalink to &quot;directory structure&quot;">​</a></h2><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">|-- alemon-plugn/</span></span>
<span class="line"><span style="color:#A6ACCD;">    |-- apps/         Application files</span></span>
<span class="line"><span style="color:#A6ACCD;">    |-- db/           Data layer</span></span>
<span class="line"><span style="color:#A6ACCD;">        |-- local/       Local data reading</span></span>
<span class="line"><span style="color:#A6ACCD;">        |-- mysql/       Database Connection</span></span>
<span class="line"><span style="color:#A6ACCD;">        |-- redis/       redis connection</span></span>
<span class="line"><span style="color:#A6ACCD;">    |-- lib/          Engineering package</span></span>
<span class="line"><span style="color:#A6ACCD;">    |-- models/       database model</span></span>
<span class="line"><span style="color:#A6ACCD;">    |-- resources/    Resource Bundle</span></span>
<span class="line"><span style="color:#A6ACCD;">        |-- assets/      static data</span></span>
<span class="line"><span style="color:#A6ACCD;">        |-- defset/      default configuration</span></span>
<span class="line"><span style="color:#A6ACCD;">        |-- html/        static Web page</span></span>
<span class="line"><span style="color:#A6ACCD;">    |-- api.ts        Plug-in Interface</span></span>
<span class="line"><span style="color:#A6ACCD;">    |-- app.config.ts  Path Configuration</span></span>
<span class="line"><span style="color:#A6ACCD;">    |-- index.ts      Export Entry</span></span></code></pre></div><h2 id="test" tabindex="-1">test <a class="header-anchor" href="#test" aria-label="Permalink to &quot;test&quot;">​</a></h2><p>Due to the continuous upgrade of plugins, document instructions may not be updated in a timely manner</p><p>Actual instructions can be viewed in the apps application folder</p><table><thead><tr><th>指令</th><th>描述</th></tr></thead><tbody><tr><td>/柠檬帮助</td><td>把 html 渲染后截图,并回复发送</td></tr><tr><td>/百度一下</td><td>把 uri 地址转换为二维码发送</td></tr><tr><td>/你好呀</td><td>对话机锁定效果,拥有前后文记录</td></tr><tr><td>/你得意什么</td><td>让机器人对消息进行表态</td></tr><tr><td>/原神黄历</td><td>把 uri 链接图片发送出来</td></tr><tr><td>/数组信息</td><td>区别于字符消息用的数组格式消息</td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Public domain robots must be @ before triggering commands</p></div>`,9),o=[l];function p(c,i,r,d,u,m){return t(),s("div",null,o)}const A=a(n,[["render",p]]);export{C as __pageData,A as default};
